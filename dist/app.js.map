{"version":3,"sources":["../statics/js/app.js"],"names":["console","html","document","toggle","circle","circleWidth","getVpdr","vph","Math","vpw","vpd","openNavbar","openTimeline","visibility","scale","ease","Expo","easeInOut","y","opacity","closeNavbar","closeTimeline","delay","isOpen","window","gsap"],"mappings":"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","sourcesContent":["console.clear();\r\n\r\nconst html = document.documentElement;\r\nconst toggle = document.getElementById(\"toggle\");\r\nconst circle = document.getElementById(\"bg-circle\");\r\nconst circleWidth = circle.clientWidth;\r\n\r\n// Math calcul to get Height, Width, Diagonal and Circle Radius\r\n\r\nconst getVpdr = () => {\r\n    const vph = Math.pow(html.offsetHeight, 2); // Height\r\n    const vpw = Math.pow(html.offsetWidth, 2); // Width\r\n    const vpd = Math.sqrt(vph + vpw); // Diagonal\r\n    return (vpd * 2) / circleWidth; // Circle radius\r\n};\r\n\r\nconst openNavbar = () => {\r\n    const openTimeline = new TimelineMax();\r\n    openTimeline.to([\".navbar-container\"], 0, { visibility: \"visible\" });\r\n\r\n    openTimeline.to(\"#bg-circle\", 1.5, {scale: getVpdr(),ease: Expo.easeInOut});\r\n    openTimeline.staggerFromTo(\"navbar ul li\",0.5,{ y: 25, opacity: 0 },{ y: 0, opacity: 1 },0.1,1);\r\n};\r\n\r\nconst closeNavbar = () => {\r\n    const closeTimeline = new TimelineMax();\r\n    closeTimeline.staggerFromTo(\"navbar ul li\",0.5,{ y: 0, opacity: 1, delay: 0.5 },{ y: 25, opacity: 0 },-0.1);\r\n    closeTimeline.to(\"#bg-circle\", 1, {scale: 0,ease: Expo.easeInOut,delay: -0.5});\r\n    closeTimeline.to(\".navbar-container\", 0, { visibility: \"hidden\" });\r\n};\r\n\r\nlet isOpen = false;\r\n\r\ntoggle.onclick = function () {\r\n    if (isOpen) {\r\n        this.classList.remove(\"active\");\r\n        closeNavbar();\r\n    } else {\r\n        this.classList.add(\"active\");\r\n        openNavbar();\r\n    }\r\n    isOpen = !isOpen;\r\n};\r\n\r\n// On windows resize, recalcule circle radius and update\r\n\r\nwindow.onresize = () => {\r\n    if (isOpen) {\r\n        gsap.to(\"#bg-circle\", 1, { scale: getVpdr(), ease: Expo.easeInOut });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"file":"app.js"}